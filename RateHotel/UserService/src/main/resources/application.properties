spring.application.name=UserService

server.port = 8081

# MySQL Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/microservices
spring.datasource.username=root
spring.datasource.password=sS@18071999
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Hibernate dialect
spring.jpa.database-platform=org.hibernate.dialect.MySQLDialect

#Eureka config
#eureka.instance.prefer-ip-address = true
#eureka.client.fetch-registry = true
#eureka.client.register-with-eureka = true
#eureka.client.service-url.defaultZone = http://localhost:8761/eureka

#Eureka config using config server
spring.config.import=optional:configserver:http://localhost:8085

#circuit breaker config
management.health.circuitbreakers.enabled = true
management.endpoints.web.exposure.include = health
management.endpoints.health.show-details = always
resilience4j.circuitbreaker.instances.ratingHotelBreaker.registerHealthIndicator = true
resilience4j.circuitbreaker.instances.ratingHotelBreaker.eventConsumerBufferSize = 10
resilience4j.circuitbreaker.instances.ratingHotelBreaker.failureRateThreshold = 50
resilience4j.circuitbreaker.instances.ratingHotelBreaker.minimumNumberOfCalls = 5
resilience4j.circuitbreaker.instances.ratingHotelBreaker.automaticTransitionFromOpenToHalfOpenEnabled = true
resilience4j.circuitbreaker.instances.ratingHotelBreaker.waitDurationInOpenState = 6s
resilience4j.circuitbreaker.instances.ratingHotelBreaker.permittedNumberOfCallsInHalfOpenState = 3
resilience4j.circuitbreaker.instances.ratingHotelBreaker.slidingWindowSize = 10
resilience4j.circuitbreaker.instances.ratingHotelBreaker.slidingWindowType = COUNT_BASED

#retry config
resilience4j.retry.instances.ratingHotelService.max-attempts = 3
resilience4j.retry.instances.ratingHotelService.wait-duration = 5s

#ratelimiter config
resilience4j.ratelimiter.instances.userRateLimiter.limit-refresh-period = 4s
resilience4j.ratelimiter.instances.userRateLimiter.limit-for-period = 2
resilience4j.ratelimiter.instances.userRateLimiter.timeout-duration = 2s

#okta security config
okta.oauth2.issuer = https://dev-31978654.okta.com/oauth2/default
okta.oauth2.audience = api://default

#okta client config as user service working as client for rating and hotel service
spring.security.oauth2.resourceserver.jwt.issuer-uri = https://dev-31978654.okta.com/oauth2/default
spring.security.oauth2.client.registration.my-internal-client.provider = okta
spring.security.oauth2.client.registration.my-internal-client.authorization-grant-type = client_credentials
spring.security.oauth2.client.registration.my-internal-client.scope = internal
spring.security.oauth2.client.registration.my-internal-client.client-id = 0oakw68uopAc34crk5d7
spring.security.oauth2.client.registration.my-internal-client.client_secret = vIu7aCCbK3JV8zyvsQBSiVYQgn3sK0jJPoge5Ip1tnxMcKwX-QRnRXVavdejEjzB
spring.security.oauth2.client.provider.okta.issuer-uri = https://dev-31978654.okta.com/oauth2/default

